version: '3.3'

services:

  #############
  ### mysql ###
  #############
  db:
   image: mysql/mysql-server:8.0.0
   restart: always
   volumes:
    - /path/to/mysql_data/dir:/var/lib/mysql/:rw
    - ./mysql_resources/docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d
   environment:
    MYSQL_ROOT_PASSWORD: xxx
    MYSQL_DATABASE: xxx
    MYSQL_USER: xxx
    MYSQL_PASSWORD: xxx
   networks:
    - vre

  dumper:
   image: mysql-cron:20191024
   restart: always
   volumes:
    - /path/to/backups/dashboard_mysql/:/srv/mysql/backup
   environment:
    CRON_SCHEDULE: '10 * * * *' #optional, defaults to hourly.
    MAX_SECONDS_SINCE_LAST: 3610
    MYSQL_DATABASE: xxx
    MYSQL_USER: xxx
    MYSQL_PASSWORD: xxx
    # optional
    #MYSQL_PORT: 3306
    #MYSQL_HOST: 'db'
   networks:
    - vre
   healthcheck:
     test: "/healthcheck.sh"
     interval: 300s


  #################
  ### VRE entry ###
  #################
  dashboard:
   image: registry-sdc.argo.grnet.gr/sdc_vre:20190919-1
   restart: always
   depends_on:
    - db
   ports:
    - "80" # Should run on http, no SSL, only locally, no port exposed to outside - SSL is done by reverse proxy!
   networks:
    - vre
   environment:
    REVERSE_PROXY: 1
    VRE_SERVICES: extractor,import,qc,kill_wsodv,diva,viz,erddap
    NUM_DISTR: 1
    #
    # 1. Where odv can reach nextcloud over WebDAV from inside the ODV container
    # Use http://workspace... if both containers are in same docker-network
    # Use https://<server> if nextcloud runs somewhere outside
    NEXTCLOUD_URL_SAMEHOST: http://workspace/remote.php/webdav/
    NEXTCLOUD_URL: https://manatee.abc.org/remote.php/webdav/
    # 
    # 2. Where the VRE tells Unity/B2ACCESS to call us back during authentication
    UNITY_REDIRECT: https://manatee.abc.org/vre_login/unity/callback
    # 
    # 3. Where the VRE can reach the nextcloud (via SSH) to create a user during
    # registration (both local registration and Marine-ID authentication)
    NEXTCLOUD_SSH: workspace # must be the name of the service!
    # 
    # 4. URLs of the VRE services
    # Must be reachable from the client, as they are integrated using iframes
    # Can be comma-separated lists
    workspace: https://manatee.abc.org:8001/index.php/apps/loginviapost/login
    diva: https://dolphin.abc.org:8000,https://seagull.xyz.org:8000
    import: https://seahorse.abc.org:8191/import_service_init,https://seagull.xyz.org:8191/import_service_init
    extractor: https://seahorse.abc.org:8191/sdc,https://seagull.xyz.org:8191/sdc
    qc: https://seahorse.abc.org:8191/quality_control_start,https://seagull.xyz.org:8191/quality_control_start
    viz: https://seahorse.abc.org:8003,https://seagull.xyz.org:8003
    kill_wsodv: https://seahorse.abc.org:8191/kill_wsodv,https://seagull.xyz.org:8191/kill_wsodv
    erddap: http://seahorse.abc.org:8002/erddap,http://seagull.xyz.org:8002/erddap
    # 
    # 5. Does the service run behind a reverse proxy?
    # If , makes sure that the FORCE_ROOT_URL is used in all HTML links,
    # HTML forms etc. (served by Laravel) if service runs behind a
    # reverse proxy, i.e. forceRootUrl() is enforced in Laravel.
    # Please use 1 for true and 0 for false!
    REVERSE_PROXY: 1 # 1=true!
    #
    # 6. This URL is used in HTML links, HTML forms etc. (served by
    # Laravel) if service runs behind a reverse proxy, i.e. forceRootUrl()
    # is enforced in Laravel.
    # Please include the protocol, i.e. "https://".
    # Note: Only used if REVERSE_PROXY is true.
    FORCE_ROOT_URL: 'https://manatee.abc.org'
    # 
    # 7. This makes sure that https is used in HTML links, HTML forms etc.
    # (served by Laravel) if service runs behind a reverse proxy, i.e.
    # forceScheme() is enforced in Laravel.
    # Note: Only used if REVERSE_PROXY is true.
    FORCE_SCHEME: 'https'
    # 8. JupyterHub... Not used anymore...??
    DIVA_HUB_KEY: 'xxx'
    #
   labels:
    - vre

  #############
  ### nginx ###
  #############
  proxy_for_dashboard:
    image: nginx
    restart: always
    volumes:
      - ./nginx_dashboard.conf:/etc/nginx/conf.d/default.conf
      - ../HEALTH/healthcheck_nginx.sh:/bin/healthcheck.sh
      - /path/to/ssl/certs/cert_and_chain.crt:/etc/ssl/certs/myhost.crt:ro
      - /path/to/ssl/private/priv.key:/etc/ssl/private/myhost.key:ro
    ports:
      - "443:443"
      - "80:80"
    networks:
      - vre
    depends_on:
      - dashboard
    healthcheck:
      test: ["CMD", "/bin/healthcheck.sh"]
      interval: 60s
      timeout: 30s
      retries: 5

  #################
  ### nextcloud ###
  #################

  # POST-OSTENDE: 20190929

  workspace:
   image: registry-sdc.argo.grnet.gr/vre_workspace:20190919-1
   volumes:
     - /path/to/nextcloud_data:/var/www/html/data:rw
   restart: always
   ports:
     - "81:80"
   networks:
     - vre
   environment:
    # Make sure that dashboard is allowed to access nextcloud:
    trusted_domains: 'manatee.abc.org'
    # Make sure that the automatic detection of hostnames for redirects
    # (done by nextcloud) works also if nextcloud runs behing a reverse proxy.
    # Please see: https://github.com/nextcloud/server/blob/master/config/config.sample.php#L436
    overwritehost: 'manatee.abc.org:8001'
    overwriteprotocol: 'https'

  #############
  ### nginx ###
  #############
  proxy_for_workspace:
    image: nginx
    restart: always
    volumes:
      - ./nginx_workspace.conf:/etc/nginx/conf.d/default.conf
      - ../HEALTH/healthcheck_nginx.sh:/bin/healthcheck.sh
      - /path/to/ssl/certs/cert_and_chain.crt:/etc/ssl/certs/myhost.crt:ro
      - /path/to/ssl/private/priv.key:/etc/ssl/private/myhost.key:ro
    ports:
      - "8001:443"
    networks:
      - vre
    depends_on:
      - workspace
    healthcheck:
      test: ["CMD", "/bin/healthcheck.sh"]
      interval: 60s
      timeout: 30s
      retries: 5

networks:
  vre:
    external: true

    