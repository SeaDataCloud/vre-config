################################################
### nginx reverse proxy for                  ###
### dashboard, nextcloud (workspace) and odv ###
################################################


# dashboard:
upstream dasheee {
    server dashboard:80;
}

# nextcloud:
upstream proximanuvem {
    server workspace:80;
}

# fileselector:
upstream up_fileselector {
    server fileselector:80;
}

# odv:
upstream up_odv {
    server odv:80;
}


# redirect from port 80 to 443:
server {
      listen      80 default;
      server_name sdc-test.argo.grnet.gr;
      access_log off;
      error_log off;
      return      301 https://$server_name$request_uri;
}

# settings for port 443:
server {
    listen       443 ssl;
    ssl_certificate     /etc/ssl/certs/myhost.crt;
    ssl_certificate_key /etc/ssl/private/myhost.key;

    # Additional SSL settings because of the deprecation
    # of TLS 1.0 and 1.1, see:
    # https://www.feistyduck.com/bulletproof-tls-newsletter/issue_46_the_end_of_tls_1_0_and_1_1
    # Check with: https://www.ssllabs.com/ssltest/analyze.html
    ssl_protocols       TLSv1.2;
    ssl_prefer_server_ciphers on;
    ssl_ciphers         "ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES128-GCM-SHA256";
    ssl_session_cache   shared:SSL:1m;
    ssl_session_timeout 300;
    ssl_session_tickets on;
    ssl_stapling        on;
    ssl_stapling_verify on;

    # Allow uploads (otherwise even with 3-4 MB it fails)
    client_max_body_size 2G;

    # Exact matches for /healthcheck.json are served from here immediately:
    location = /healthcheck.json {
        alias /srv/vre/vre_health.json;
    }

    #################
    ### dashboard ###
    #################

    # not a regex, but short prefix, so last resort.
    # TODO: add a exact match for /!
    location / {
        proxy_pass http://dasheee;
        proxy_set_header Host  $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host  $host;
        proxy_set_header X-Forwarded-Port  $server_port;
        proxy_cookie_domain localhost sdc-test.argo.grnet.gr;
        proxy_cookie_domain dasheee sdc-test.argo.grnet.gr;
        # This is needed to ensure that the redirect after login goes to orca, not to "dashee"
        proxy_redirect http://dasheee https://sdc-test.argo.grnet.gr;
        proxy_redirect http://sdc-test.argo.grnet.gr https://sdc-test.argo.grnet.gr;
    }


    #################
    ### workspace ###
    #################

    # This is no regex, so this must be the longest matching prefix!
    # We use the ^~ modifier, so there will no checks for regexes.
    # proxy_pass with trailing slash: The "/workspace/" part of the location should be
    # replaced by "/", see here: http://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_pass
    location ^~ /workspace/ {
        proxy_pass   http://proximanuvem/;  ## LAEUFT!
        
        # trying to solve timeout
        proxy_read_timeout 3600; # 60*60 sec
        
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host  $host;
        proxy_set_header X-Forwarded-Port  $server_port;
        
        proxy_cookie_domain localhost sdc-test.argo.grnet.gr;
        proxy_cookie_domain proximanuvem sdc-test.argo.grnet.gr;

        # These do not seem to be used:
        proxy_redirect http://localhost https://sdc-test.argo.grnet.gr_haha;
        proxy_redirect http://proximanuvem https://sdc-test.argo.grnet.gr_hoho;
        proxy_redirect https://proximanuvem https://sdc-test.argo.grnet.gr_hihi;
        proxy_redirect http://sdc-test.argo.grnet.gr https://sdc-test.argo.grnet.gr_hehe;
    }


    ####################
    ### fileselector ###
    ####################

    # This is no regex, so this must be the longest matching prefix!
    # We use the ^~ modifier, so there will no checks for regexes.
    # proxy_pass with trailing slash: The "/fileselector/" part of the location should be
    # replaced by "/", see here: http://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_pass
    location ^~ /fileselector/ {
        proxy_pass   http://up_fileselector/;

        # trying to solve timeout
        proxy_read_timeout 3600; # 60*60 sec

        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host  $host;
        proxy_set_header X-Forwarded-Port  $server_port;

        proxy_cookie_domain localhost sdc-test.argo.grnet.gr;
        proxy_cookie_domain up_fileselector sdc-test.argo.grnet.gr;

        # These do not seem to be used:
        proxy_redirect http://localhost https://sdc-test.argo.grnet.gr_haha;
        proxy_redirect http://up_fileselector https://sdc-test.argo.grnet.gr_hoho;
        proxy_redirect https://up_fileselector https://sdc-test.argo.grnet.gr_hihi;
        proxy_redirect http://sdc-test.argo.grnet.gr https://sdc-test.argo.grnet.gr_hehe;
    }

    ###############
    ### odv     ###
    ###############

    location  ~ /odv/(.*)$ {
        proxy_pass http://up_odv/$1$is_args$args;
        proxy_set_header Host  $host;
        proxy_set_header X-Real-IP $remote_addr;
        # From: https://www.nginx.com/blog/websocket-nginx/
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "Upgrade";
        # From: https://blog.martinfjordvald.com/2013/02/websockets-in-nginx/
        proxy_read_timeout 1360s; # 60*60 sec
    }

    location  ~ /odv {
        rewrite ^(.*[^/])$ $1/ permanent;
    }

    # error pages:
    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
        root   /usr/share/nginx/html;
    }
}

