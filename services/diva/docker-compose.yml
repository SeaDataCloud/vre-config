version: '3.3'

services:
  hub:
   image: registry-sdc.argo.grnet.gr/jupyterhub_vre:20200428
   restart: always
   ports:
    - 8000
   volumes:
     # Docker socket is necessary to spawn notebooks:
     - /var/run/docker.sock:/var/run/docker.sock
     # Config:
     - ./jupyterhub_config.py:/srv/jupyterhub/jupyterhub_config.py
     # SSL certs:
     #- /path/to/ssl/certs/cert_and_chain.pem:/srv/jupyterhub/ssl/certs/myhost_cert_and_chain.crt:rw
     #- /path/to/ssl/private/priv.key:/srv/jupyterhub/ssl/private/myhost.key:rw
     # Where nextcloud is synced to:
     - /scratch/vre/sync_from_athens/nextcloud_data:/usr/share/userdirectories/:rw
     # Health check:
     - ../HEALTH/healthcheck_jupyterhub.sh:/bin/healthcheck.sh
   cap_add:
    - SYS_ADMIN
   networks:
     - vre-hubs
   environment:
      RUN_AS_USER: ${RUN_AS_USER}
      RUN_AS_GROUP: ${RUN_AS_GROUP}
      # Where are the user directories on the host file system:
      HOST_WHERE_ARE_USERDIRS: ${HOST_WHERE_ARE_USERDIRS} # on bluewhale
      USERDIR_TEMPLATE_HOST: ${USERDIR_TEMPLATE_HOST}
      USERDIR_IN_CONTAINER: ${USERDIR_IN_CONTAINER} # DIVA operating on synced
      MOUNT_USER_DIRS: 'true'
      # Where to authenticate users:
      AUTH_URL: ${AUTH_URL}
      WHITELIST_AUTH: 'https://vre.seadatanet.org'
      ADMIN_PW: ${ADMIN_PW}
      # Which image to run:
      DOCKER_JUPYTER_IMAGE: ${DOCKER_JUPYTER_IMAGE}
      # How to call the containers:
      CONTAINER_PREFIX: ${CONTAINER_PREFIX}
      # Under which URL is this reachable? host:port/BASE_URL/
      BASE_URL: ${BASE_URL}   # this must be in the dashboard, and in nginx config!
      # Network config:
      DOCKER_NETWORK_NAME: vre-hubs
      HUB_IP: ${HUB_IP}   # this is this service's name!
      JUPYTERHUB_CRYPT_KEY: ${JUPYTERHUB_CRYPT_KEY}  # create by: "openssl rand -hex 32"
      SSL_OFF: 'true'
      HTTP_TIMEOUT: 60
      # Misc:
      MEMORY_LIMIT: ${MEMORY_LIMIT}
      SHUTDOWN_ON_LOGOUT: 'false'
   healthcheck:
      test: ["CMD", "/bin/healthcheck.sh"]
      interval: 60s
      timeout: 30s
      retries: 5
   labels:
    - "JupyterHub for DIVA"

# Using an external network, because we need to pass the network name to the
# docker spawner, and if we use an internal one, its name will be prefixed by the
# compose stack's name.
networks:
  vre_hubs:
    external: true
