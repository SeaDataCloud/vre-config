version: '3.3'

# 20201026, with SSL

services:

  syncer:
   image: registry-sdc.argo.grnet.gr/syncer_wsgi:20200428-3-as33  
   restart: always
   expose:
    - 5000
   volumes:
     # Source directory:
     # Must be readable by the user who runs the syncer (33):
     - ${DATA_PATH}:/srv/syncer/source/
     # Target directory: Only if local syncing is being used!
     # I assume this must also be writeable by the same
     #- ${LOCAL_SYNC_TARGET}/:/srv/syncer/localtarget/
     # Public key to be used for logging in to the remote hosts:
     - ${PUBLIC_KEY_SSH_RSYNC}:/srv/syncer/KEYS/privkey:ro
     # File containing the info about the remote hosts
     - ./remotehosts.json:/srv/syncer/remotehosts.json:ro
     # SSL certs:
     - ${SSL_PRIVATE_KEY}:/srv/jupyterhub/ssl/certs/myhost_cert_and_chain.crt:rw
     - ${SSL_CERT_CHAIN}:/srv/jupyterhub/ssl/private/myhost.key:rw
     # Config for uwsgi:
     # Volume to contain the socket to communicate with nginx:
     - wsgi_volume:/srv/syncer/wsgi_socket/
     # Mounted since 20200514
     - .unison:/var/www/.unison/
   environment:
      LOG_LEVEL: 'DEBUG'
      LOCAL_SUBDIR: 'files/'
      THIS_HOST: ${THIS_HOST} # host where this runs
      THIS_SITE: ${THIS_SITE} # site where this runs
      LOCAL_URL_FOR_FORM: 'myhost.foo.bar:890'
      WHITELIST_SERVERS: 'jellyfish.argo.grnet.gr,bluewhale.dkrz.de'
      #USE_FOR_INDIVIDUAL_USERS: 'true' # default: 'true'
      #REGEX_ARG: 'Regex ^vre_.*' # default 'Regex ^vre_.*'
   labels:
    - "Synchronization using rsync or unison."
   healthcheck:
      test: ["CMD", "uwsgi", "--connect-and-read",  "/srv/syncer/wsgi_socket/stats.sock"]
      interval: 60s
      timeout: 30s
      retries: 5
   networks:
      - vre_dash

  syncer_proxy:
    image: nginx:1.19.3 # newest on 20201019
    restart: always
    volumes:
      # Two sets of nginx config need to be passed:
      - ./nginx_wsgi.conf:/etc/nginx/conf.d/default.conf
      - ./nginx_main_altered.conf:/etc/nginx/nginx.conf
      # Volume to contain the socket to communicate with Flask via uwsgi:
      - wsgi_volume/:/srv/syncer/wsgi_socket/
      # Healthcheck and SSL certs:
      - ${PATH_TO_HEALTHCHECKS}/healthcheck_nginx.sh:/bin/healthcheck.sh
      - ${SSL_CERT_CHAIN}:/etc/ssl/certs/myhost.crt:rw
      - ${SSL_PRIVATE_KEY}:/etc/ssl/private/myhost.key:rw
    ports:
      - 5000:443
    depends_on:
      - syncer
    networks:
      - vre_dash
    healthcheck:
      test: ["CMD", "/bin/healthcheck.sh"]
      interval: 60s
      timeout: 30s
      retries: 5

volumes:
  wsgi_volume:

networks:
  vre_dash:
    external: true

